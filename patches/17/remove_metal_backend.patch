diff --git a/make/modules/java.desktop/lib/Awt2dLibraries.gmk b/make/modules/java.desktop/lib/Awt2dLibraries.gmk
index 3bbff03638b..1acf6528992 100644
--- a/make/modules/java.desktop/lib/Awt2dLibraries.gmk
+++ b/make/modules/java.desktop/lib/Awt2dLibraries.gmk
@@ -161,7 +161,6 @@ $(eval $(call SetupJdkLibrary, BUILD_LIBAWT, \
     LIBS_macosx := -lmlib_image \
         -framework Cocoa \
         -framework OpenGL \
-        -framework Metal \
         -framework JavaRuntimeSupport \
         -framework ApplicationServices \
         -framework AudioToolbox, \
@@ -736,8 +735,7 @@ ifeq ($(ENABLE_HEADLESS_ONLY), false)
         -framework ApplicationServices \
         -framework Foundation \
         -framework Security \
-        -framework Cocoa \
-        -framework Metal
+        -framework Cocoa
   else ifeq ($(call isTargetOs, windows), true)
     LIBSPLASHSCREEN_LIBS += kernel32.lib user32.lib gdi32.lib delayimp.lib $(WIN_JAVA_LIB) jvm.lib
   else
@@ -798,7 +796,6 @@ ifeq ($(call isTargetOs, macosx), true)
       libawt_lwawt/awt \
       libawt_lwawt/font \
       libawt_lwawt/java2d/opengl \
-      libawt_lwawt/java2d/metal \
       include \
       common/awt/debug \
       common/java2d/opengl \
@@ -834,7 +831,6 @@ ifeq ($(call isTargetOs, macosx), true)
           -framework AudioToolbox \
           -framework Carbon \
           -framework Cocoa \
-          -framework Metal \
           -framework Security \
           -framework ExceptionHandling \
           -framework JavaRuntimeSupport \
@@ -870,31 +866,6 @@ else
 endif
 
 ifeq ($(call isTargetOs, macosx), true)
-  SHADERS_SRC := $(TOPDIR)/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/shaders.metal
-  SHADERS_SUPPORT_DIR := $(SUPPORT_OUTPUTDIR)/native/java.desktop/libosxui
-  SHADERS_AIR := $(SHADERS_SUPPORT_DIR)/shaders.air
-  SHADERS_LIB := $(INSTALL_LIBRARIES_HERE)/shaders.metallib
-
-  $(eval $(call SetupExecute, metal_shaders, \
-      INFO := Running metal on $(notdir $(SHADERS_SRC)) (for libosxui.dylib), \
-      DEPS := $(SHADERS_SRC), \
-      OUTPUT_FILE := $(SHADERS_AIR), \
-      SUPPORT_DIR := $(SHADERS_SUPPORT_DIR), \
-      COMMAND := $(METAL) -c -std=osx-metal2.0 \
-          -mmacosx-version-min=$(MACOSX_METAL_VERSION_MIN) \
-          -o $(SHADERS_AIR) $(SHADERS_SRC), \
-  ))
-
-  $(eval $(call SetupExecute, metallib_shaders, \
-      INFO := Running metallib on $(notdir $(SHADERS_AIR)) (for libosxui.dylib), \
-      DEPS := $(SHADERS_AIR), \
-      OUTPUT_FILE := $(SHADERS_LIB), \
-      SUPPORT_DIR := $(SHADERS_SUPPORT_DIR), \
-      COMMAND := $(METALLIB) -o $(SHADERS_LIB) $(SHADERS_AIR), \
-  ))
-
-  TARGETS += $(SHADERS_LIB)
-
   $(eval $(call SetupJdkLibrary, BUILD_LIBOSXUI, \
       NAME := osxui, \
       OPTIMIZATION := LOW, \
@@ -909,7 +880,6 @@ ifeq ($(call isTargetOs, macosx), true)
           -L$(INSTALL_LIBRARIES_HERE), \
       LIBS := -lawt -losxapp -lawt_lwawt \
           -framework Cocoa \
-          -framework Metal \
           -framework Carbon \
           -framework ApplicationServices \
           -framework JavaRuntimeSupport \
@@ -917,7 +887,6 @@ ifeq ($(call isTargetOs, macosx), true)
   ))
 
   TARGETS += $(BUILD_LIBOSXUI)
-  $(BUILD_LIBOSXUI): $(SHADERS_LIB)
 
   $(BUILD_LIBOSXUI): $(BUILD_LIBAWT)
 
diff --git a/src/java.desktop/macosx/classes/sun/java2d/metal/MTLGraphicsConfig.java b/src/java.desktop/macosx/classes/sun/java2d/metal/MTLGraphicsConfig.java
index 64117b8999e..301b1dbee1f 100644
--- a/src/java.desktop/macosx/classes/sun/java2d/metal/MTLGraphicsConfig.java
+++ b/src/java.desktop/macosx/classes/sun/java2d/metal/MTLGraphicsConfig.java
@@ -89,7 +89,6 @@ public final class MTLGraphicsConfig extends CGraphicsConfig
     private final Object disposerReferent = new Object();
     private final int maxTextureSize;
 
-    private static native boolean isMetalFrameworkAvailable();
     private static native boolean tryLoadMetalLibrary(int displayID, String shaderLib);
     private static native long getMTLConfigInfo(int displayID, String mtlShadersLib);
 
@@ -100,7 +99,7 @@ public final class MTLGraphicsConfig extends CGraphicsConfig
     private static native int nativeGetMaxTextureSize();
 
     static {
-        mtlAvailable = isMetalFrameworkAvailable();
+        mtlAvailable = false;
     }
 
     private MTLGraphicsConfig(CGraphicsDevice device,
diff --git a/src/java.desktop/macosx/native/libawt_lwawt/awt/AWTSurfaceLayers.m b/src/java.desktop/macosx/native/libawt_lwawt/awt/AWTSurfaceLayers.m
index 1cc4abfaaad..2af0689c044 100644
--- a/src/java.desktop/macosx/native/libawt_lwawt/awt/AWTSurfaceLayers.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/awt/AWTSurfaceLayers.m
@@ -29,7 +29,6 @@
 #import "JNIUtilities.h"
 
 #import <QuartzCore/CATransaction.h>
-#import <QuartzCore/CAMetalLayer.h>
 
 @implementation AWTSurfaceLayers
 
@@ -71,8 +70,7 @@ - (void) setLayer:(CALayer *)newLayer {
 // Updates back buffer size of the layer if it's an OpenGL/Metal layer
 // including all OpenGL/Metal sublayers
 + (void) repaintLayersRecursively:(CALayer*)aLayer {
-    if ([aLayer isKindOfClass:[CAOpenGLLayer class]] ||
-        [aLayer isKindOfClass:[CAMetalLayer class]]) {
+    if ([aLayer isKindOfClass:[CAOpenGLLayer class]]) {
         [aLayer setNeedsDisplay];
     }
     for(CALayer *child in aLayer.sublayers) {
